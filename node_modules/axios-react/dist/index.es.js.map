{"version":3,"file":"index.es.js","sources":["../src/index.tsx"],"sourcesContent":["import { useState, useEffect, ReactChildren, ReactChild } from 'react';\nimport axios, { AxiosResponse, AxiosError, AxiosRequestConfig } from 'axios';\nimport isOnline from 'is-online';\n// @ts-ignore\nimport root from 'window-or-global';\n\ninterface Props {\n  children: ReactChild | ReactChildren;\n  skip: boolean,\n  config: AxiosRequestConfig,\n}\n\nexport default (\n  {\n    children,\n    skip,\n    config,\n  }: Props,\n) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<AxiosError<any> | null>(null);\n  const [response, setResponse] = useState<AxiosResponse<any> | null>(null);\n  const [networkStatus, setNetworkStatus] = useState<string | null>(null);\n\n  useEffect((): void => {\n    checkNetworkConnection();\n    if (!skip) {\n      fetch();\n    }\n  }, []);\n\n  const checkNetworkConnection = (): void => {\n    if ((typeof document != 'undefined') && root && isOnline) {\n      root.addEventListener('offline', () => {\n        isOnline({ timeout: 1000 })\n          .then(online => {\n            if (!online) {\n              setNetworkStatus('offline');\n            }\n          });\n      });\n      root.addEventListener('online', () => {\n        isOnline({ timeout: 1000 })\n          .then(online => {\n            if (online) {\n              setNetworkStatus('online');\n            }\n          });\n      });\n      isOnline({ timeout: 1000 })\n        .then(online => {\n          if ((online && networkStatus !== 'online') || (!online && networkStatus !== 'offline')) {\n            setNetworkStatus(online ? 'online' : 'offline');\n          }\n        });\n    }\n  };\n\n  const fetch = (): void => {\n    if (config) {\n      setLoading(true);\n      axios(config)\n        .then((response: AxiosResponse<any>) => {\n          setResponse(response);\n          setLoading(false);\n        })\n        .catch((error: AxiosError<any>) => {\n          setError(error);\n          setLoading(false);\n        });\n    }\n  };\n\n  // @ts-ignore\n  return children({ loading, error, response, refetch: fetch, networkStatus });\n};\n"],"names":[],"mappings":";;;;;AAYA,aAAe,UACb,EAIQ;QAHN,sBAAQ,EACR,cAAI,EACJ,kBAAM;IAGF,IAAA,oBAAgD,EAA/C,eAAO,EAAE,kBAAU,CAA6B;IACjD,IAAA,mBAA0D,EAAzD,aAAK,EAAE,gBAAQ,CAA2C;IAC3D,IAAA,mBAAmE,EAAlE,gBAAQ,EAAE,mBAAW,CAA8C;IACpE,IAAA,mBAAiE,EAAhE,qBAAa,EAAE,wBAAgB,CAAkC;IAExE,SAAS,CAAC;QACR,sBAAsB,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,EAAE;YACT,KAAK,EAAE,CAAC;SACT;KACF,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,sBAAsB,GAAG;QAC7B,IAAI,CAAC,OAAO,QAAQ,IAAI,WAAW,KAAK,IAAI,IAAI,QAAQ,EAAE;YACxD,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE;gBAC/B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;qBACxB,IAAI,CAAC,UAAA,MAAM;oBACV,IAAI,CAAC,MAAM,EAAE;wBACX,gBAAgB,CAAC,SAAS,CAAC,CAAC;qBAC7B;iBACF,CAAC,CAAC;aACN,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE;gBAC9B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;qBACxB,IAAI,CAAC,UAAA,MAAM;oBACV,IAAI,MAAM,EAAE;wBACV,gBAAgB,CAAC,QAAQ,CAAC,CAAC;qBAC5B;iBACF,CAAC,CAAC;aACN,CAAC,CAAC;YACH,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;iBACxB,IAAI,CAAC,UAAA,MAAM;gBACV,IAAI,CAAC,MAAM,IAAI,aAAa,KAAK,QAAQ,MAAM,CAAC,MAAM,IAAI,aAAa,KAAK,SAAS,CAAC,EAAE;oBACtF,gBAAgB,CAAC,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAC,CAAC;iBACjD;aACF,CAAC,CAAC;SACN;KACF,CAAC;IAEF,IAAM,KAAK,GAAG;QACZ,IAAI,MAAM,EAAE;YACV,UAAU,CAAC,IAAI,CAAC,CAAC;YACjB,KAAK,CAAC,MAAM,CAAC;iBACV,IAAI,CAAC,UAAC,QAA4B;gBACjC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACtB,UAAU,CAAC,KAAK,CAAC,CAAC;aACnB,CAAC;iBACD,KAAK,CAAC,UAAC,KAAsB;gBAC5B,QAAQ,CAAC,KAAK,CAAC,CAAC;gBAChB,UAAU,CAAC,KAAK,CAAC,CAAC;aACnB,CAAC,CAAC;SACN;KACF,CAAC;;IAGF,OAAO,QAAQ,CAAC,EAAE,OAAO,SAAA,EAAE,KAAK,OAAA,EAAE,QAAQ,UAAA,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,eAAA,EAAE,CAAC,CAAC;CAC9E,EAAC;;;;"}